# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Compiling and publishing

on:
  push:
    branches: [ "*.*.*" ]

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Determine the version
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
    
    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Build the jar files
      uses: gradle/gradle-build-action@v2.11.1
      with:
        gradle-version: current
        arguments: build

    - name: Have the project checked by a virus scanner
      if: ${{ github.event_name == 'push' }}
      uses: crazy-max/ghaction-virustotal@v4
      with:
        vt_api_key: ${{ secrets.VIRUSTOTAL_API_KEY }}
        files: |
          ./build/libs/*.jar
      continue-on-error: false
        
    - name: Publish
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ steps.extract_branch.outputs.branch }}
        tag_name: ${{ steps.extract_branch.outputs.branch }}
        draft: true
        files: |
          build/libs/GameBridge-${{ steps.extract_branch.outputs.branch }}.jar
          build/libs/GameBridge-${{ steps.extract_branch.outputs.branch }}-sources.jar
        body: |
          # First Major Release!

          Lets you join a server with the plugin
          installed, even if the server doesn't have a
          public port due to being hosted at home.

          You can host for free.
          
          Just drop GameBridge-0.2.0.jar into
          the plugins folder.

          For players, please drop GameBridge-0.2.0.jar
          into the Fabric mods folder.

          You can get Fabric here:

          https://fabricmc.net

          You can also use the CurseForge app to
          install a version of Minecraft with Fabric.

          https://www.curseforge.com/download/app

          Future support for Fabric servers is coming soon.

          ### Server Commands:
            ```/host - Tells you your server ID```

          ### Client-sided commands:
            ```/gjoin <server id> - Joins a server with the plugin installed```
        append_body: true


#    - name: Sleep command (no longer necessary)
#      run: sleep 30s
#      shell: bash
            
#    - name: Upload Jars as Artifacts
#      uses: actions/upload-artifact@v3
#      with:
#        name: Artifacts
#        path: build/libs
      
